{"version":3,"sources":["actions/index.js","reducers/favos.js","reducers/index.js","components/parts/Header.js","components/parts/Card.js","components/pages/App.js","serviceWorker.js","index.js"],"names":["readFavos","values","dispatch","a","tag","ar_qs","push","encodeURI","offset","console","log","qs","join","axios","get","response","renew","type","combineReducers","favos","datas","action","raws","data","i","l","length","x","body","JSON","parse","tags","useStyles","makeStyles","theme","formControl","margin","minWidth","color","mapDispatchToProps","connect","props","classes","React","useState","selectValue","setSelectValue","className","root","AppBar","position","Toolbar","Select","value","onChange","event","target","window","scrollTo","MenuItem","key","_","map","card","marginTop","maxWidth","content","paddingBottom","MyCard","text","Card","CardContent","Typography","variant","component","mm","App","this","readTags","_this","addEventListener","pageYOffset","Math","max","apply","document","clientHeight","scrollHeight","documentElement","nextFavos","Fragment","favo","index","id","txt","title","style","renderFavos","Component","state","Boolean","location","hostname","match","enhancer","applyMiddleware","thunk","store","createStore","reducer","ReactDOM","render","exact","path","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.043b8c39.chunk.js","sourcesContent":["import axios from 'axios'\nconst ROOT_URL = '' // production\n//const ROOT_URL = 'http://localhost:31234' // develop\nconst TAGS = 'tags'\nconst FAVOS = 'favos'\nexport const READ_TAGS = \"READ_TAGS\"\nexport const READ_FAVOS = \"READ_FAVOS\"\n\nexport const readFavos = values => async dispatch => {\n    // tag offset offsetを計算しないと\n    const tag = values.tag\n    // ここに来るまでにtagは決まっているけどoffsetは計算してないと駄目\n    var ar_qs = []\n    if (values.tag) {\n        ar_qs.push(\"tag=\" + encodeURI(values.tag))\n    }\n    var offset = values.offset\n    if (!values.offset) {\n        offset = 0\n        console.log(\"offset is not defined\")\n    }\n    console.log(offset)\n    ar_qs.push(\"offset=\" + offset)            \n    const qs = ar_qs.join(\"&\")\n    const response = await axios.get(`${ROOT_URL}/${FAVOS}?${qs}`)\n    const renew = values.renew\n    dispatch({\n        type: READ_FAVOS,\n        response,\n        tag,\n        offset,\n        renew\n    })\n}\nexport const readTags = () => async dispatch => {\n    const response = await axios.get(`${ROOT_URL}/${TAGS}`)\n    dispatch({\n        type: READ_TAGS,\n        response\n    })\n}","import {\n    READ_FAVOS,\n    READ_TAGS,\n} from '../actions'\n\nexport default (datas = {favos: []}, action) => {\n    switch (action.type) {\n        case READ_FAVOS:\n            console.log(action);\n            var raws = action.response.data\n            if(action.renew) {\n                datas.favos = []\n            }\n            var favos = datas.favos\n            console.log(favos)\n            for(var i=0,l=raws.length;i<l;i++){\n                var x = raws[i]\n                x.body = JSON.parse(x.body);\n                favos.push(x)\n            }\n            const offset = action.offset\n            const tag = action.tag\n            return { ...datas, favos, offset, tag}\n        case READ_TAGS:\n            const tags = action.response.data\n            return {...datas, tags }\n        default:\n            return datas\n    }\n}","import {combineReducers} from 'redux'\nimport favos from './favos'\n\n//export default combineReducers({ events ,form: form})\nexport default combineReducers({ favos })","import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  readFavos,\n} from '../../actions'\nimport {connect} from 'react-redux'\nimport _ from 'lodash'\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: \"0 auto\",\n    minWidth: \"98%\",\n    color: \"#FFF\"\n  },\n}));\n\nfunction TitleAppBar(props) {\n  const classes = useStyles();\n  const [selectValue,setSelectValue] = React.useState(\"\");\n  const handleChange = event => {\n    setSelectValue(event.target.value);\n    window.scrollTo(0,0)\n    props.readFavos({tag: event.target.value, offset: 0, renew: true});\n  };\n  \n  return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\">\n        <Toolbar>\n          <Select\n            value={selectValue}\n            onChange={handleChange}\n            className={classes.formControl}\n          >\n          <MenuItem key=\"::::NULL::::\" value=\"::::NULL::::\">未設定</MenuItem>\n          {\n            _.map(props.tags, tag => (\n              <MenuItem key={tag} value={tag}>{tag}</MenuItem>\n            ))\n          }\n          </Select>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nconst mapDispatchToProps = ({readFavos})\nexport default connect(null,mapDispatchToProps)(TitleAppBar);\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    marginTop: '1em',\n    maxWidth: '95%',\n    margin: \"0 auto\",\n  },\n  content: {\n    paddingBottom: \"16px !important\",\n  }\n}));\n\nexport default function MyCard(props) {\n  const classes = useStyles();\n  const text = props.text;\n  return (\n    <Card className={classes.card}>\n      <CardContent className={classes.content}>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {text}\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n}","import React from 'react';\nimport TitleAppBar from '../parts/Header'\nimport MyCard from '../parts/Card'\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  readFavos,\n  readTags\n} from '../../actions'\nimport {connect} from 'react-redux'\nimport _ from 'lodash'\n\nconst useStyles = makeStyles(theme => ({\n  mm: {\n    marginTop: \"40px\",\n  },\n}));\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    props = {...props, offset: 0 }\n    console.log(props.offset)\n  }\n\n  componentDidMount() {\n    this.props.readFavos({offset:0})\n    this.props.readTags()\n    const _this = this\n    window.addEventListener('scroll', function (event) {\n      var scrollTop = window.pageYOffset\n      var height = Math.max.apply(null, [document.body.clientHeight, document.body.scrollHeight, document.documentElement.scrollHeight, document.documentElement.clientHeight]) - 1000\n      if (scrollTop >= height) {\n        _this.nextFavos()\n      }\n    })\n  }\n\n  nextFavos(){\n    console.log(this.props)\n    this.props.readFavos({tag: this.props.tag ,offset: this.props.favos.offset + 10})\n  }\n\n  renderFavos() {\n    return <React.Fragment>\n    {\n      _.map(this.props.favos.favos, (favo,index) => (\n        <MyCard key={favo.id + \"-\" + index} text={favo.txt}/>\n      ))\n    }\n    </React.Fragment>\n  }\n\n  render () {\n    const marginTop = {\n      marginTop: \"80px\",\n    }\n    return <div className=\"App\">\n      <TitleAppBar title='A' tags={this.props.favos.tags}/>\n      <div style={marginTop}>\n      {\n        this.renderFavos()\n      }\n      </div>\n    </div>\n  }\n}\nconst mapStateToProps = state => ({favos: state.favos})\nconst mapDispatchToProps = ({readTags,readFavos})\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore, applyMiddleware} from 'redux'\nimport {Provider} from 'react-redux'\nimport thunk from 'redux-thunk'\nimport reducer from './reducers'\nimport './index.css';\nimport App from './components/pages/App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter,Route, Switch} from 'react-router-dom'\n\nconst enhancer = applyMiddleware(thunk)\nconst store = createStore(reducer, enhancer)\n\nReactDOM.render(\n<Provider store={store}>\n<BrowserRouter>\n    <Switch>\n        <Route exact path=\"/\" component={App}></Route>\n        <Route exact path=\"/fav\" component={App}></Route>\n    </Switch>\n</BrowserRouter>\n</Provider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}